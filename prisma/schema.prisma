generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                        String                   @id @map("guild_id")
  prefix                    String?                  @map("guild_prefix")
  lang                      String?                  @map("guild_lang")
  notesLogsChannel          String?                  @map("notes_log_channel")
  modLogChannel             String?                  @map("mod_log_channel")
  voiceLogsChannel          String?                  @map("voice_logs_channel")
  tempChannels              TempChannel[]
  experiences               UsersExperience[]
  textExperienceSettingsId  Int?                     @map("txt_exp_settings_id")
  voiceExperienceSettingsId Int?                     @map("vc_exp_settings_id")
  experienceNotificationsId Int?                     @map("exp_notify_id")
  Moderation                Moderation[]
  ActiveTempVoice           ActiveTempVoice[]
  textExperienceSettings    TextExperienceSettings?  @relation(fields: [textExperienceSettingsId], references: [id])
  voiceExperienceSettings   VoiceExperienceSettings? @relation(fields: [voiceExperienceSettingsId], references: [id])

  @@index([id])
}

model TextExperienceSettings {
  id             Int     @id @map("guild_id")
  min            Int?    @map("text_experience_min")
  max            Int?    @map("text_experience_max")
  isEnabled      Boolean @map("is_text_exp_enabled")
  defaultMessage String? @map("text_default_levelup_message")
  guild          Guild[]

  @@index([id])
}

model VoiceExperienceSettings {
  id             Int     @id @map("guild_id")
  min            Int?    @map("voice_experience_min")
  max            Int?    @map("voice_experience_max")
  isEnabled      Boolean @map("is_voice_exp_enabled")
  defaultMessage String? @map("voice_default_levelup_message")
  guild          Guild[]

  @@index([id])
}

model TempChannel {
  id              String            @map("channel_create_id")
  guildId         String            @map("guild_id")
  categoryId      String            @map("channel_category_id")
  guild           Guild             @relation(fields: [guildId], references: [id])
  ActiveTempVoice ActiveTempVoice[]

  @@id([id, guildId, categoryId])
  @@unique([guildId, categoryId])
  @@index([guildId])
}

model Moderation {
  id          Int      @id @map("case_id")
  guildId     String   @map("guild_id")
  userId      String   @map("user_id")
  moderatorId String   @map("mod_id")
  type        String   @map("case_type")
  reason      String   @map("case_reason")
  date        DateTime @map("case_date")
  guild       Guild    @relation(fields: [guildId], references: [id])

  @@index([guildId])
}

model ActiveTempVoice {
  id                String      @map("channel_id")
  guildId           String      @map("guild_id")
  channelOwner      String      @map("channel_owner_id")
  channelCategoryId String      @map("channel_category_id")
  guild             Guild       @relation(fields: [guildId], references: [id])
  tempChannel       TempChannel @relation(fields: [guildId, channelCategoryId], references: [guildId, categoryId])

  @@id([id, guildId])
  @@index([guildId, channelOwner, channelCategoryId])
}

model UsersTempVoiceConfiguration {
  id           String   @map("user_id")
  channelName  String?  @map("channel_name")
  channelLimit Int?     @map("channel_limit")
  isLocked     Boolean? @map("is_channel_locked")
  user         Users    @relation(fields: [id], references: [id])

  @@id([id])
}

model Users {
  id                          String                        @id @map("user_id")
  totalUsedCommands           Int                           @map("total_used_commands")
  UsersTempVoiceConfiguration UsersTempVoiceConfiguration[]
}

model UsersExperience {
  id              String @map("user_id")
  guildId         String @map("guild_id")
  voiceExperience Int    @map("vc_exp")
  textExperience  Int    @map("text_exp")
  voiceLevel      Int    @map("vc_level")
  textLevel       Int    @map("text_level")
  totalExperience Int    @map("total_exp")
  guild           Guild  @relation(fields: [guildId], references: [id])

  @@id([id, guildId])
  @@index([guildId])
}
